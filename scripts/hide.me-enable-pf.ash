#!/bin/ash
# Enables/disables port forwarding. Must be run after the connection is active and running.
# Args:
#   1: (optional) 'true' or 'false' to enable or disable port forwarding. Default=true
# Env:
#   HIDE_ME_TOKEN_FILE: (optional). The file generated by hide.em-accessToken.ash or equivalent. Default=./accessToken.txt
# Example Usage:
#   HIDE_ME_TOKEN_FILE="accessToken.txt" ./hide.me-enable-pf.ash true

function die() {
    if [ $# -gt 0 ]; then
        echo >&2 "ERROR:" "$@"
    fi
    exit 1
}

if [[ -z "${HIDE_ME_TOKEN_FILE}" ]]; then HIDE_ME_TOKEN_FILE="accessToken.txt"; fi

# default
enable="true"
if [ $# -gt 0 ]; then
    if [ "$1" = "true" ] || [ "$1" = "false" ]; then
        enable=$1
    else
        die "Incorrect arg1 is not 'true' or 'false': $1"
    fi
fi

command -v curl &>/dev/null || die "Missing tool: cURL"

# This is a hardcoded endpoint within the VPN network.
url="https://vpn.hide.me:4321/upnp"

accessToken=$(cat ${HIDE_ME_TOKEN_FILE})
data='{
	"accessToken":"'${accessToken}'",
	"enabled":'${enable}'
}'

jsonConf=$(curl -s -f --cacert CA.pem -X POST --data-binary "${data}" "${url}")
returnValue=$?
if [[ ${returnValue} != 0 ]]; then echo "cURL failed with "${returnValue}; exit 1; fi